public class P0099_BitArithmetic {
	public static void main(String[] args) {
		
		/*
			7个位运算符
			按位与&，按位或|，按位异或^（相同0，不同1），按位取反~
			>>,<<,>>>
			注：位运算符参与符号位运算
		*/


		//2&3
		//2原码
		//2是int，4bytes*8bits
		//2=>补码=原码 	00000000 00000000 00000000 00000010
		//3=>补码=原码 	00000000 00000000 00000000 00000011
		//按位&的补码  	00000000 00000000 00000000 00000010
		//反推反码     	00000000 00000000 00000000 00000010
		//反推正码     	00000000 00000000 00000000 00000010
		//转10进制     	2
		System.out.println(2&3);


		//~-2
		//-2原码			10000000 00000000 00000000 00000010
		//转反码			11111111 11111111 11111111 11111101
		//转补码+1		11111111 11111111 11111111 11111110
		//~				00000000 00000000 00000000 00000001
		//反推反码		00000000 00000000 00000000 00000001
		//反推原码		00000000 00000000 00000000 00000001
		//转10进制		1
		System.out.println(~-2);


		//~2
		//2原码			00000000 00000000 00000000 00000010
		//转补码			00000000 00000000 00000000 00000010
		//~				11111111 11111111 11111111 11111101
		//反推反码		11111111 11111111 11111111 11111100
		//反推原码		10000000 00000000 00000000 00000011
		//转10进制		-3
		System.out.println(~2);


		//2|3
		//2原码补码		00000000 00000000 00000000 00000010
		//3原码补码		00000000 00000000 00000000 00000011
		//按位或 		00000000 00000000 00000000 00000011
		//反推反码原码	00000000 00000000 00000000 00000011
		//转10进制		3
		System.out.println(2|3);


		//2^3
		//2原码补码		00000000 00000000 00000000 00000010
		//3原码补码		00000000 00000000 00000000 00000011
		//按位异或 		00000000 00000000 00000000 00000001
		//反推反码原码	00000000 00000000 00000000 00000001
		//转10进制		1
		System.out.println(2^3);









	}
}