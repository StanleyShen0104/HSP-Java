public class P0086_Binary {
	public static void main(String[] args) {
		
		/*
			二进制 转 十进制: 	sum(num*2^(position-1))
			八进制 转 十进制: 	sum(num*8^(position-1))
			十六进制 转 十进制:	sum(num*16^(position-1))
		*/

		/*
			十进制 转 二进制:
			使用余数法，持续除以2，直到被除数小于2
			倒序既是答案
			34/2 = 17...0
			17/2 = 8 ...1
			8/2  = 4 ...0
			4/2  = 2 ...0
			2/2  = 1 ...0
			1<2  >>0B100010 1byte=8bits =>0B00100010

			十进制 转 八进制:
			使用余数法，持续除以8，直到被除数小于8
			倒序既是答案
			131/8 = 16...3
			16/8  = 2 ...0
			2<8   >>0203

			十进制 转 十六进制:
			使用余数法，持续除以16，直到被除数小于16
			倒序既是答案
			237/16 = 14...13
			14<16   >>0X(14)(13)>>0XED
		*/

		/* 
		   	二进制 转 八进制:
			从最低位起，每3位转一个八进制数
		   	11010101->11(010)(101)->325->0325
			
			二进制 转 十六进制:
			从最低位起，每4位转一个十六进制数
		   	11010101->(1101)(0101)->(13)5->0XD5
		*/
		
		/*
		   	八进制 转 二进制:
		   	每一个数都转为3位的二进制数
		   	0237->(0)(2)(3)(7)->(0)(010)(011)(111)
		   	0b010011111

		   	十六进制 转 二进制:
		   	每一个数都转为4位的二进制数
		   	0X23B->(2)(3)(11)->(0010)(0011)(1011)->
		   	0b001000111011
		*/
		int n1 = 0b1010;//2
		int n2 = 1010;//10
		int n3 = 01010;//8
		int n4 = 0X10101;//16
		System.out.println(n1);
		System.out.println(n2);
		System.out.println(n3);
		System.out.println(n4);
	}
}